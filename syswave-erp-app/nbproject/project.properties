annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=syswave-erp-app
application.vendor=victor
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/syswave-erp-app.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${libs.Apache_codec.classpath}:\
    ${libs.Image_Scaling_Library.classpath}:\
    ${libs.JasperReports.classpath}:\
    ${libs.JCalendar1.3.2.classpath}:\
    ${libs.Loggin_Factory.classpath}:\
    ${libs.MySQLDriver.classpath}:\
    ${libs.PostgreSQLDriver.classpath}:\
    ${libs.POI_3.13.classpath}:\
    ${reference.mydaolayer.jar}:\
    ${reference.syswave-erp-arch.jar}:\
    ${reference.syswave-erp-reports.jar}:\
    ${reference.syswave-erp-ui.jar}:\
    ${reference.syswave-swing-extensions.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.7
javac.target=1.7
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=com.syswave.gestion.Application
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.mydaolayer=../../mydaolayer
project.syswave-erp-arch=../syswave-erp-arch
project.syswave-erp-reports=../syswave-erp-reports
project.syswave-erp-ui=../syswave-erp-ui
project.syswave-swing-extensions=../syswave-swing-extensions
reference.mydaolayer.jar=${project.mydaolayer}/dist/mydaolayer.jar
reference.syswave-erp-arch.jar=${project.syswave-erp-arch}/dist/syswave-erp-arch.jar
reference.syswave-erp-reports.jar=${project.syswave-erp-reports}/dist/syswave-erp-reports.jar
reference.syswave-erp-ui.jar=${project.syswave-erp-ui}/dist/syswave-erp-ui.jar
reference.syswave-swing-extensions.jar=${project.syswave-swing-extensions}/dist/syswave-swing-extensions.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
